<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu tincidunt justo, eget porta arcu. Curabitur ullamcorper convallis enim in lobortis. Suspendisse vulputate a sapien sed fermentum. Nunc placerat faucibus orci mollis porttitor. Praesent venenatis in enim sed tempus. Morbi ut massa venenatis, sodales lectus eu, elementum nunc. Pellentesque pretium lorem a semper aliquam. Pellentesque scelerisque ligula ac dolor faucibus, a tincidunt elit lacinia. Phasellus feugiat mauris quis malesuada imperdiet. Nullam finibus sem felis, eu accumsan metus tincidunt in. Aliquam volutpat nibh metus, nec convallis felis porta ut. Vestibulum lobortis tristique neque sit amet consequat. Morbi nec accumsan lorem.

Duis a elementum nisi. Ut egestas felis nec finibus mollis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam gravida varius aliquam. Praesent sollicitudin porttitor tellus, quis auctor purus sagittis id. Vestibulum porta mi vel rutrum tincidunt. Nam eu consequat elit. Mauris euismod eget mi ac ultrices.

Etiam eget semper metus, et imperdiet nisl. Proin in arcu a libero tempor rhoncus ac ac sapien. Morbi sodales dapibus erat, et commodo ipsum laoreet nec. Fusce placerat ac neque nec tristique. Etiam vel turpis id elit viverra facilisis. In et lacus et risus commodo consectetur a at quam. Donec leo enim, laoreet sit amet mauris a, malesuada accumsan ipsum.

Sed ac mi sed justo dictum dignissim. Nunc ligula ligula, sollicitudin nec luctus ac, vulputate vel nisi. Sed dignissim risus eu nunc aliquet pretium. In auctor ex in odio scelerisque ultricies. Donec volutpat turpis enim, eget consectetur justo euismod sit amet. Proin aliquet at tellus at sollicitudin. Nam fermentum efficitur ante, sit amet dapibus eros dapibus eget. Maecenas in turpis a velit porttitor condimentum et eget massa.

Pellentesque eu purus ornare nisi ornare feugiat in eu turpis. In accumsan, ligula at rhoncus aliquam, dui enim laoreet ligula, quis mattis mauris nisl ut erat. Sed eu sagittis tellus, in elementum enim. Nunc vulputate, arcu sit amet bibendum congue, ex nibh malesuada leo, sed molestie eros ipsum eu nulla. Donec a vulputate sem. Praesent purus tortor, venenatis sed ex sed, dapibus ultricies est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</value>
  </data>
</root>